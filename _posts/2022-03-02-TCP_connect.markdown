---
layout: post
title:  "TCP 연결"
date:   2022-03-02 15:04:59 +0900
categories: Network
---

## TCP 연결

<br>
<br>
프리앰블 / 스타트 프레임 딜리미터 / MAC 헤더 / IP 헤더 / TCP 헤더 / 데이터 / FCS <br>
<br>
MTU : IP헤더 부터 데이터의 최대 길이. Maximum Transmission Unit <br>
MSS : 데이터 최대 길이. Maximum Segment Size <br>
<br>
<br>
### Ack 번호와 시퀀스 번호
<br>
TCP에서 MSS 크기에 맞춰서 데이터를 조각내서 보낼때 몇 번째 바이트에 해당하는지 TCP 헤더에 송신할 때 기록한 값이 **시퀀스 번호** <br>
수신측에서 그 이전에 수신한 데이터와 합쳐서 몇 번째 바이트까지 수신한 것인지 계산해서 TCP 헤더의 **Ack 번호**에 기록 <br>
시퀀스 번호는 임의의 값으로 시작 <br>
<br>
여기까지만 봤을때는 <br>
```
서버 <- 클라이언트의 시퀀스 번호 초기값      - 클라이언트
서버  - 서버의 시퀀스 번호 초기값, Ack 번호  -> 클라이언트
서버 <-           Ack 번호                 - 클라이언트
```
<br>
<br>
송신한 Ack 번호가 되돌아 오지 않으면 버퍼에 저장중인 패킷을 다시 보낸다. <br>
<br>
TCP의 이 구조가 강력해서 LAN어댑터, 버퍼, 라우터, 어플리케이션 모두 회복 조취 없이 데이터를 송수신함. <br>
물리적으로 연결이 끊긴 경우를 제외하고.. <br>
<br>
<br>
### 윈도우 제어 방식
<br>
단순히 한번 보내고 한번 받고 하는것은 시간 낭비여서 보낸 후 Ack 번호 통지를 기다리지 않고 계속해서 여러개의 패킷을 보냄. <br>
수신측의 버퍼를 초과해서 보내는 경우가 생길 수 있음. 이 문제를 해결하는 방법. <br>
수신 처리가 끝나고 수신 버퍼에 빈 공간이 생기면 그 분량만큼 수신할 수 있는 데이터 양을 늘리고 TCP 헤더의 **윈도우 필드**에 넣어서 송신측에 알림. <br>
<br>
<br>
Ack 번호는 수신 동작이 완료되었을때 보내고 수신 처리가 완료 된 후 윈도우를 송신 측에 보내면 패킷이 너무 많아짐. <br>
그래서 Ack 번호와 윈도우 통지를 합쳐서 같이 보냄. <br>
복수의 Ack 번호 통지가 연속적으로 일어난 경우나, 윈도우 통지가 연속된 경우에도 마지막 것만 보내므로써 패킷의 수를 줄일수 있음. <br>
<br>
