---
layout: post
title:  "참조 타입과 값 타입"
date:  2022-07-05 20:20:59 +0900
categories: Csharp CLR
---

<br>
<br>
<br>
참조 타입은 관리되는 힙에 항상 할당되고, new 연산자가 만들어진 객체의 주소를 반환한다.<br>
<br>
참조 타입을 사용할 때는 반드시 다음 사항들을 명심해야 한다.<br>
<br>
<br>
메모리는 반드시 관리되는 힙에 할당되어야만 한다.<br>
힙에 할당되는 각 객체들은 코드상에 선언된 사항들 이외에 추가적인 멤버들을 포함하고 있으며 이들에 대한 초기화가 반드시 이루어지게 된다. <br>
객체에 선언되는 필드들에 관한 메모리 영역은 반드시 모두 0으로 초기화된다.<br>
관리되는 힙으로부터 객체를 할당하면서 가비지 컬렉션이 발생할 수 있다.<br>
<br>
<br>
성능 향상을 목적으로 참조 타입보다 좀 더 단순하고 자주 사용되는 타입들을 위해서 CLR에서는 값 타입을 정의하고 있다. <br>
값 타입도 멤버를 가지고 있을 수 있다.<br>
<br>
값 타입은 가비지 컬렉터의 관리 대상이 아니다. <br>
<br>
.NET Framework SDK 문서에서 참조 타입은 클래스라고 표현하고 구조체나 열거타입이라고 하는것은 모두 값 타입이다.<br>
<br>
ex) System.Int32구조체, System.Exception 클래스, System.Random 클래스, System.Boolean 구조체 등<br>
<br>
모든 구조체들은 System.ValueType 이라는 추상 타입으로부터 상속 받는다. 또한 ValueType은 Object로 부터 상속된다.<br>
모든 열거타입은 System.Enum 추상 타입으로부터 상속받고 있고, Enum은 ValueType을 상속받는다. <br>
<br>
모든 값 타입은 Sealed 타입이다. <br>
다른 타입의 기본 타입이 될 수가 없다. <br>
<br>
sealed 키워드 = 상속을 방지해주는 키워드 <br>
<br>
<br>
타입을 설계할 때는 새로 만드는 타입이 값 타입 혹은 참조 타입중 어떤것으로 택하는 것이 좋을지 생각해봐야 한다.<br>
특정 상황에서는 값 타입은 참조 타입보다 더 나은 성능을 제공한다. <br>
<br>
<br>
<br>
<br>
